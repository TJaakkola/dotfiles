
# Get api key from $1
function xkey { 
  docker exec -it $1 curl -X POST -u xrd:secret https://localhost:4000/api/api-keys --data '["XROAD_REGISTRATION_OFFICER","XROAD_SECURITYSERVER_OBSERVER","XROAD_SECURITY_OFFICER","XROAD_SERVICE_ADMINISTRATOR","XROAD_SYSTEM_ADMINISTRATOR"]' --header "Content-Type: application/json" -k
}

# Print database configuration (xss => xroad security server)
function xdb { docker exec -it $1 cat /etc/xroad/db.properties }

# Open database console to ss1
function xdbc {
  docker exec -it -u postgres ss1 bash -c "psql;"
}

# List log files in security server
function xlogs {
  docker exec -it $1 ls -l /var/log/xroad
}

# Print spesific log file in security server
function xlog {
  docker exec -it $1 cat /var/log/xroad/$2
}

# Print tail for a logfile
function xtail {
  docker exec -it $1 tail -f /var/log/xroad/$2
} 

# Build images (optionally), start containers, restore backup and reload proxy-ui-api
function xup {
  cwd="$(pwd)"
  cd $XROAD_UTILS_HOME/docker/dev/tools
  ./setup_dev_containers.sh develop
  ./reload_api_ui_backend.sh ss1
  "$cwd"
}

# Setup SS2
function xup-ss2 {
  cwd="$(pwd)"
  cd "$XROAD_UTILS_HOME"/docker/dev && docker-compose -f docker-compose.yml -f docker-compose.develop-packages.yml up --detach ss2
  cd utils
  ./init_dev_security_server.sh ss2 true
  cd ../tools
  ./reload_api_ui_backend.sh ss2
  cd "$cwd"
}

### PROXY-UI-API

# Configure local proxy-ui-api so that it can be run on host
function xp-host-config {
  sed -i '' 's/4100/5000/g' "$XROAD_HOME"/src/proxy-ui-api/frontend/.env.local
  sed -i '' 's/port: 4000/port: 5000/g' "$XROAD_HOME"/src/proxy-ui-api/src/main/resources/common-application.yml
  sed -i '' 's/classes.dependsOn make/\/\/classes.dependsOn make/g' "$XROAD_HOME"/src/common-util/build.gradle
  sed -i '' 's/clean.dependsOn makeClean/\/\/clean.dependsOn makeClean/g' "$XROAD_HOME"/src/common-util/build.gradle
}

# Reset local proxy-ui-api so that it is run in container
function xp-host-reset {
  sed -i '' 's/5000/4100/g' "$XROAD_HOME"/src/proxy-ui-api/frontend/.env.local
  sed -i '' 's/port: 5000/port: 4000/g' "$XROAD_HOME"/src/proxy-ui-api/src/main/resources/common-application.yml
  sed -i '' 's/\/\/classes.dependsOn make/classes.dependsOn make/g' "$XROAD_HOME"/src/common-util/build.gradle
  sed -i '' 's/\/\/clean.dependsOn makeClean/clean.dependsOn makeClean/g' "$XROAD_HOME"/src/common-util/build.gradle
}

# Setup proxy-ui-api on host
function xp-host {
  cwd="$(pwd)"
  cd $XROAD_UTILS_HOME/docker/dev && docker-compose down
  cd $XROAD_UTILS_HOME/docker/dev/tools && ./setup_proxy_api_ui_on_host.sh 
  ./reload_api_ui_backend.sh
  cd "$cwd"
}

# Run single test-file given as parameter
function xp-single-test {
  docker exec -it -w /home/builder/xroad/src/proxy-ui-api builder bash -c "../gradlew -Dtest.single=$1 -Pskip-frontend-build -xcheckstyleTest -xcheckstyleMain test"
} 

# Build and deploy proxy-ui-api backend to container
function xp-reload {
  cwd="$(pwd)" 
  cd $XROAD_UTILS_HOME/docker/dev/tools
  ./reload_api_ui_backend.sh $1
  cd "$cwd"
}

# switch openapi3 description in kapsi-space
function x-test-switch {
  ssh etulinja@kapsi.fi 'cd sites/etulinja.kapsi.fi/www && mv example.yaml example_tmp.yaml && mv example_other.yaml example.yaml && mv example_tmp.yaml example_other.yaml'
}